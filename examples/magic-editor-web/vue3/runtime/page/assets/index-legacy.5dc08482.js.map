{"version":3,"file":"index-legacy.5dc08482.js","sources":["../../../../../../packages/ui/src/button/src/index.vue"],"sourcesContent":["<template>\n  <button class=\"magic-ui-button\" @click=\"clickHandler\" :style=\"style\">\n    <slot>\n      <magic-ui-text :config=\"textConfig\"></magic-ui-text>\n    </slot>\n  </button>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent, getCurrentInstance, PropType, reactive } from 'vue';\n\nimport { MButton, MButtonInstance } from '../../../src/types';\nimport { useGetBoxShadow, useGetLinearBackGround } from '../../hooks/useGetStyle';\nimport useApp from '../../useApp';\n\nexport default defineComponent({\n  props: {\n    config: {\n      type: Object as PropType<MButton>,\n      default: () => ({}),\n    },\n\n    model: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  setup(props) {\n    useApp(props);\n    const vm: MButtonInstance = getCurrentInstance()?.proxy as MButtonInstance;\n    const actions = reactive<Function[]>([]);\n    const actualActions = computed(() => [\n      typeof props.config.preAction === 'function' ? props.config.preAction : () => true,\n      ...actions,\n      typeof props.config.postAction === 'function' ? props.config.postAction : () => true,\n    ]);\n    function pushAction(action: Function): void {\n      actions.push(action);\n    }\n    async function clickHandler(): Promise<void> {\n      for (const fn of actualActions.value) {\n        if (typeof fn === 'function') {\n          const ret = await fn(vm, { model: props.model });\n          if (ret === false) {\n            break;\n          }\n        }\n      }\n    }\n\n    const textConfig = computed<MButton>(() => ({\n      type: 'text',\n      text: props.config?.text || '',\n      disabledText: props.config?.disabledText || '',\n      html: props.config?.html || '',\n    }));\n\n    const style = computed(() => {\n      const { boxShadowStyle } = useGetBoxShadow(props.config);\n      const { LinearBackGroundStyle } = useGetLinearBackGround(props.config);\n      const style = {\n        ...boxShadowStyle,\n        ...LinearBackGroundStyle,\n      };\n\n      return style;\n    });\n\n    return {\n      pushAction,\n      clickHandler,\n      textConfig,\n      style,\n    };\n  },\n});\n</script>\n<style lang=\"scss\">\n.magic-ui-button-out-box {\n  border: none;\n\n  .magic-ui-button {\n    width: 100%;\n    height: 100%;\n  }\n}\n</style>\n"],"names":["_sfc_main","Vue","defineComponent","props","config","type","Object","default","model","setup","useApp","vm","actions","reactive","actualActions","preAction","postAction","pushAction","action","push","clickHandler","async","fn","value","textConfig","text","disabledText","html","style","boxShadowStyle","useGetBoxShadow","LinearBackGroundStyle","useGetLinearBackGround","resolveComponent","openBlock","createElementBlock","class","onClick","_cache","args","_ctx","normalizeStyle"],"mappings":"4ZAce,MAAAA,EAAAC,IAAgBC,gBAAA,CAAAC,MAAA,CACtBC,OAAA,CACGC,KAAAC,OACAC,QAAAA,KAAA,CAAA,IAERC,MAAA,CAEOH,KAAAC,OACCC,QAAAA,MAAA,KAGVE,MAAAN,GAEEO,EAAAP,GACA,MAAAQ,EAA4BV,gCAC5BW,EAAgBX,IAAqBY,SAAA,IACrCC,EAAsBb,mBAAe,mBAAAE,EAAAC,OAAAW,UAAAZ,EAAAC,OAAAW,UAAA,KAAA,KAC2CH,EAC3E,mBAAAT,EAAAC,OAAAY,WAAAb,EAAAC,OAAAY,WAAA,KAAA,KAmCL,MAAA,CAAOC,WAhCP,SAAAC,GACEN,EAAAO,KAAAD,EAAmB,EAgCnBE,aA9BFC,iBACE,IAAA,MAAAC,KAAAR,EAAAS,MACE,GAAA,mBAAAD,IAEE,UADAA,EAAAX,EAAA,CAAAH,MAAAL,EAAAK,QAEE,KAGN,EAuBAgB,WApBiBvB,oBAAyBI,KAAA,OACpCoB,KAAAtB,EAAAC,QAAAqB,MAAA,GACsBC,aAAAvB,EAAAC,QAAAsB,cAAA,GACgBC,KAAAxB,EAAAC,QAAAuB,MAAA,OAkB5CC,MAdY3B,mBACZ,MAAA4B,eAAAA,GAAAC,EAAA3B,EAAAC,SACA2B,sBAAAA,GAAAC,EAAA7B,EAAAC,QAMA,MALA,IAAcyB,KACTE,EAIL,IAQF,6DAvEF9B,IAISgC,iBAAA,iBAJwB,OAAAhC,IAAAiC,YAAOjC,IAAAkC,mBAAA,SAAA,CAAAC,MAAA,kBAAoBC,QAAAC,EAAA,KAAAA,EAAA,GAAA,IAAAC,IAAAC,EAAApB,cAAAoB,EAAApB,gBAAAmB,UAGnDtC,IAAAwC,eAAAD,EAAAZ,QAAA"}