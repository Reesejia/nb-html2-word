{"version":3,"file":"util-legacy.a8cddc4f.js","sources":["../../../../../../packages/ui/src/util.ts"],"sourcesContent":["export const shouldUpdateCreator =\n  (newVal: Record<string, any>, oldVal: Record<string, any>) =>\n  (...rest: string[]) =>\n    rest.some((key) => newVal[key] !== oldVal[key]);\n\nexport const setLegendOption = (shouldUpdate: Function, option: any, newVal: any) => {\n  if (\n    shouldUpdate(\n      'legendShow',\n      'legendItemWidth',\n      'legendItemHeight',\n      'legendOrient',\n      'legendLeft',\n      'legendTop',\n      'legendFontSize',\n    )\n  ) {\n    option.legend[0] = {\n      ...option.legend[0],\n      show: newVal.legendShow,\n      orient: newVal.legendOrient,\n      left: newVal.legendLeft,\n      top: newVal.legendTop,\n      itemWidth: newVal.legendItemWidth,\n      itemHeight: newVal.legendItemHeight,\n      itemStyle: {\n        borderWidth: 0,\n      },\n      textStyle: {\n        fontSize: newVal.legendFontSize,\n      },\n    };\n  }\n};\n\ntype ExtraOpts = {\n  suffixFormat?: boolean;\n  isMixin?: Boolean; // 是否折柱混合\n  orientAxis?: 'xAxis' | 'yAxis';\n};\nexport const setLineBarCommonOption = (shouldUpdate: Function, option: any, newVal: any, extraOpts?: ExtraOpts) => {\n  const orientxAxis = extraOpts?.orientAxis ?? 'xAxis';\n  const orientyAxis = orientxAxis === 'xAxis' ? 'yAxis' : 'xAxis';\n  if (shouldUpdate('xAxisFontSize', 'xAxisFontSizeColor')) {\n    option[orientxAxis][0].axisLabel = {\n      ...(option[orientxAxis].axisLabel ?? {}),\n      textStyle: {\n        ...(option[orientxAxis].axisLabel?.textStyle ?? {}),\n        color: newVal.xAxisFontSizeColor,\n      },\n      fontSize: newVal.xAxisFontSize,\n    };\n  }\n  if (shouldUpdate('yAxisFontSize', 'yAxisFontSizeColor')) {\n    option[orientyAxis].forEach((item: any) => {\n      item.axisLabel = {\n        ...(item.axisLabel ?? {}),\n        textStyle: {\n          ...(option[orientyAxis].axisLabel?.textStyle ?? {}),\n          color: newVal.yAxisFontSizeColor,\n        },\n        fontSize: newVal.yAxisFontSize,\n      };\n    });\n  }\n\n  if (shouldUpdate('xAxisFontSize')) {\n    option[orientxAxis][0].axisTick.show = !!newVal.xAxisFontSize;\n  }\n  if (shouldUpdate('xAxisAxisLineColor')) {\n    option[orientxAxis][0].axisLine.lineStyle.color = newVal.xAxisAxisLineColor;\n  }\n  if (shouldUpdate('showYAxisText')) {\n    option[orientyAxis].forEach((item: any) => {\n      item.axisLabel.show = newVal.showYAxisText;\n    });\n  }\n\n  if (extraOpts?.suffixFormat) {\n    if (shouldUpdate('yAxisTextSuffix', 'yAxisShowZero')) {\n      option[orientyAxis][0].axisLabel.formatter = (val: any) =>\n        !newVal.yAxisShowZero && !val ? '' : val + newVal.yAxisTextSuffix;\n    }\n  }\n\n  if (shouldUpdate('tooltip')) {\n    option.tooltip[0].show = newVal.tooltip;\n  }\n\n  if (shouldUpdate('splitLineType', 'splitLineColor')) {\n    option[orientyAxis].forEach((item: any) => {\n      item.splitLine = {\n        ...item.splitLine,\n        lineStyle: {\n          type: newVal.splitLineType,\n          color: newVal.splitLineColor,\n        },\n      };\n    });\n  }\n  if (shouldUpdate('showSplitLine')) {\n    option[orientyAxis].forEach((item: any) => {\n      item.splitLine = {\n        ...item.splitLine,\n        show: newVal.showSplitLine,\n      };\n    });\n  }\n\n  setLegendOption(shouldUpdate, option, newVal);\n\n  if (shouldUpdate('gridTop', 'gridRight', 'gridBottom', 'gridLeft')) {\n    option.grid = {\n      top: newVal.gridTop,\n      right: newVal.gridRight,\n      bottom: newVal.gridBottom,\n      left: newVal.gridLeft,\n      containLabel: true,\n    };\n  }\n  if (shouldUpdate('xAxisName')) {\n    option[orientxAxis][0].name = newVal.xAxisName;\n  }\n  if (!extraOpts?.isMixin) {\n    if (shouldUpdate('yAxisName')) {\n      option[orientyAxis].forEach((item: any) => {\n        item.name = newVal.yAxisName;\n      });\n    }\n  }\n  if (shouldUpdate('showXAxisAxisTick')) {\n    option[orientxAxis][0].axisTick.show = newVal.showXAxisAxisTick;\n  }\n  if (shouldUpdate('yAxisNameColor')) {\n    option[orientyAxis].forEach((item: any) => {\n      item.nameTextStyle = {\n        color: newVal.yAxisNameColor,\n      };\n    });\n  }\n  if (shouldUpdate('xAxisNameColor')) {\n    option[orientxAxis].forEach((item: any) => {\n      item.nameTextStyle = {\n        color: newVal.xAxisNameColor,\n      };\n    });\n  }\n  if (shouldUpdate('xAxisAxisLabelRotate')) {\n    option[orientxAxis][0].axisLabel.rotate = newVal.xAxisAxisLabelRotate;\n  }\n\n  return option;\n};\n\nexport const setLineBarChartData = (option: any, getChartData: Function, orientAxis: 'xAxis' | 'yAxis' = 'xAxis') => {\n  const data = getChartData();\n  option[orientAxis][0].data = data.xAxisData;\n\n  option.series = data.series;\n  option.legend[0] = {\n    ...option.legend[0],\n    data: data.legendData,\n  };\n};\n\nexport const setCenterRadiusData = ({ innerRadius, outerRadius, centerX, centerY }: any) => ({\n  radius: [innerRadius || 0, outerRadius],\n  center: [centerX || '50%', centerY || '50%'],\n});\n\nexport const getShowMaxLabelOption = (dataLenIndex: number, xAxisFontSize: any) => ({\n  showMaxLabel: true,\n  formatter: (val: string | number, i: number) => {\n    let value = val;\n    if (i === 0) {\n      value = `{left|${val}}`;\n    } else if (i === dataLenIndex) {\n      value = `{right|${val}}`;\n    }\n    return value;\n  },\n  rich: {\n    right: {\n      align: 'right',\n      width: 0,\n      fontSize: xAxisFontSize,\n    },\n    left: {\n      align: 'left',\n      width: 0,\n      fontSize: xAxisFontSize,\n    },\n  },\n});\n\nexport const getGradientColor = (gradient: string[]) => ({\n  type: 'linear',\n  x: 0,\n  y: 0,\n  x2: 0,\n  y2: 1,\n  colorStops: [\n    {\n      offset: 0,\n      color: gradient[0],\n    },\n    {\n      offset: 1,\n      color: gradient[1],\n    },\n  ],\n});\nexport const getBarItemStyle = (value: any, params: any = {}) => {\n  let { borderRadius } = params;\n  if (params.orient === 'horizontal') {\n    const [lt, rt, rb, lb] = borderRadius;\n    borderRadius = [lb, lt, rt, rb];\n    if (value < 0) {\n      borderRadius = [rt, rb, lb, lt];\n    }\n  } else {\n    if (value < 0) {\n      borderRadius = borderRadius.concat().reverse();\n    }\n  }\n\n  return {\n    borderRadius,\n  };\n};\n"],"names":["exports","newVal","oldVal","rest","some","key","setLegendOption","shouldUpdate","option","legend","show","legendShow","orient","legendOrient","left","legendLeft","top","legendTop","itemWidth","legendItemWidth","itemHeight","legendItemHeight","itemStyle","borderWidth","textStyle","fontSize","legendFontSize","extraOpts","orientxAxis","orientAxis","orientyAxis","axisLabel","color","xAxisFontSizeColor","xAxisFontSize","forEach","item","yAxisFontSizeColor","yAxisFontSize","axisTick","axisLine","lineStyle","xAxisAxisLineColor","showYAxisText","suffixFormat","formatter","val","yAxisShowZero","yAxisTextSuffix","tooltip","splitLine","type","splitLineType","splitLineColor","showSplitLine","grid","gridTop","right","gridRight","bottom","gridBottom","gridLeft","containLabel","name","xAxisName","isMixin","yAxisName","showXAxisAxisTick","nameTextStyle","yAxisNameColor","xAxisNameColor","rotate","xAxisAxisLabelRotate","getChartData","data","xAxisData","series","legendData","innerRadius","outerRadius","centerX","centerY","radius","center","dataLenIndex","showMaxLabel","i","value","rich","align","width","params","borderRadius","lt","rt","rb","lb","concat","reverse"],"mappings":"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"}