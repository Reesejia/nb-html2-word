{"version":3,"file":"index.3b296587.js","sources":["../../../../../../packages/ui/src/cradar/src/index.vue"],"sourcesContent":["<!-- Test.vue -->\n<template>\n  <div class=\"t-inline-block magic-ui-echart-module\" ref=\"refCradar\" :style=\"style\" />\n</template>\n\n<script lang=\"ts\" setup>\nimport { onMounted, Ref, ref, shallowRef, watch } from 'vue';\nimport * as echarts from 'echarts';\n\nimport { legendInitOption } from '../../commonConfig';\nimport { MCRadar } from '../../types';\nimport useApp from '../../useApp';\nimport useEcharts from '../../useEcharts';\nimport useStyle from '../../useStyle';\nimport { setCenterRadiusData, setLegendOption, shouldUpdateCreator } from '../../util';\n\nconst props = defineProps<{\n  config: MCRadar;\n  // model: Object;\n}>();\n\nuseApp(props);\n\nconst refCradar = ref<HTMLElement | null>(null);\nconst refCharts = shallowRef<any>();\n\nconst getChartData = () => {\n  const { dataList, colList } = props.config.dataSourceModel;\n  const result = dataList!.reduce(\n    (\n      ret: {\n        radar: echarts.RadarComponentOption;\n        seriesData: echarts.RadarSeriesOption;\n      },\n      cur: Array<string | number>,\n    ) => {\n      const { radar, seriesData } = ret;\n      radar.indicator = radar.indicator || [];\n      seriesData.data =\n        seriesData.data ||\n        colList?.slice(1).map((item) => ({\n          value: [],\n          name: item.label,\n        }));\n      seriesData.type = 'radar';\n      cur.forEach((itm: any, idx: number) => {\n        if (idx === 0) {\n          radar.indicator!.push({\n            name: itm,\n          });\n        } else {\n          const tableIdx = idx - 1;\n          const dataItem: any = seriesData.data![tableIdx];\n          dataItem.value.push(itm);\n\n          const item = colList?.[idx] as any;\n          if (item.color) {\n            dataItem.lineStyle = {\n              color: item.color,\n            };\n          }\n          dataItem.areaStyle = getAreaStyle(item.gradient);\n          dataItem.itemStyle = dataItem.areaStyle;\n        }\n      });\n      return ret;\n    },\n    { radar: {}, seriesData: {} },\n  );\n\n  Object.assign(result.radar, setCenterRadiusData(props.config), {\n    shape: props.config.shape,\n    axisName: {\n      color: props.config.axisNameColor,\n    },\n    axisLine: {\n      lineStyle: {\n        color: props.config.axisLineColor,\n      },\n    },\n    splitLine: {\n      lineStyle: {\n        color: props.config.splitLineColor,\n      },\n    },\n    splitArea: {\n      areaStyle: {\n        color: props.config.splitAreaColor,\n      },\n    },\n  });\n  Object.assign(result.seriesData, {\n    symbol: props.config.markSymbol,\n  });\n  return {\n    radar: [result.radar],\n    series: [result.seriesData],\n    legendData: colList?.slice(1).map((item) => item.label),\n  };\n};\nconst getAreaStyle = (gradient: string[]) => ({\n  color: new echarts.graphic.RadialGradient(0.5, 0.5, 1, [\n    {\n      offset: 0,\n      color: gradient[0],\n    },\n    {\n      offset: 1,\n      color: gradient[1],\n    },\n  ]),\n});\nconst setChartData = (option: any, getChartData: Function) => {\n  const data = getChartData();\n  option.series = data.series;\n  option.radar = data.radar;\n  option.legend[0] = {\n    ...option.legend[0],\n    data: data.legendData,\n  };\n};\nonMounted(() => {\n  const { config } = props;\n  const option: echarts.EChartsOption = {\n    legend: [\n      {\n        ...legendInitOption(config),\n        data: config.dataSourceModel.colList?.slice(1).map((item) => item.label),\n      },\n    ],\n    tooltip: [\n      {\n        show: config.tooltip,\n        trigger: 'item',\n      },\n    ],\n    radar: [],\n    series: [],\n  };\n  refCharts.value = useEcharts(option, refCradar as Ref<HTMLElement>).value;\n\n  watch(\n    () => props.config,\n    (newVal, oldVal: any = {}) => {\n      const option = refCharts.value?.getOption();\n      const shouldUpdate = shouldUpdateCreator(newVal, oldVal);\n      setLegendOption(shouldUpdate, option, newVal);\n      if (shouldUpdate('tooltip')) {\n        option.tooltip[0].show = newVal.tooltip;\n      }\n      setChartData(option, getChartData);\n      refCharts.value.setOption(option, true);\n    },\n    {\n      immediate: true,\n    },\n  );\n});\n\nconst style = useStyle(props, refCharts);\n</script>\n<style lang=\"scss\" scoped>\n.t-inline-block {\n  display: inline-block;\n}\n</style>\n"],"names":["useApp","props","refCradar","refCharts","getChartData","dataList","colList","result","ret","cur","radar","seriesData","item","itm","idx","tableIdx","dataItem","getAreaStyle","setCenterRadiusData","gradient","echarts.graphic.RadialGradient","setChartData","option","getChartData2","data","config","legendInitOption","_a","useEcharts","newVal","oldVal","option2","shouldUpdate","shouldUpdateCreator","setLegendOption","style","useStyle"],"mappings":"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"}