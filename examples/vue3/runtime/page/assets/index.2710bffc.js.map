{"version":3,"file":"index.2710bffc.js","sources":["../../../../../../packages/ui/src/cgauge/src/index.vue"],"sourcesContent":["<!-- Test.vue -->\n<template>\n  <div class=\"t-inline-block magic-ui-echart-module\" ref=\"refCgauge\" :style=\"style\" />\n</template>\n\n<script lang=\"ts\" setup>\nimport { onMounted, Ref, ref, shallowRef, watch } from 'vue';\nimport * as echarts from 'echarts';\n\nimport { MCGauge } from '../../types';\nimport useApp from '../../useApp';\nimport useEcharts from '../../useEcharts';\nimport useStyle from '../../useStyle';\n\nconst props = defineProps<{\n  config: MCGauge;\n  // model: Object;\n}>();\n\nuseApp(props);\n\nconst refCgauge = ref<HTMLElement | null>(null);\nconst refCharts = shallowRef<any>();\n\nconst getOption = (config: any) => {\n  const option: echarts.EChartsOption = {\n    series: [\n      {\n        type: 'gauge',\n        radius: '100%',\n        progress: {\n          show: true,\n          width: config.axisLineLineStyleWidth,\n          itemStyle: {\n            color: config.progressItemStyleColor,\n          },\n        },\n        axisLine: {\n          lineStyle: {\n            width: config.axisLineLineStyleWidth,\n            color: [[1, config.axisLineLineStyleColor]],\n          },\n        },\n        axisTick: {\n          show: config.axisTickShow,\n        },\n        splitLine: {\n          length: config.splitLineLength,\n          lineStyle: {\n            width: 2,\n            color: config.splitLineLineStyleColor,\n          },\n        },\n        axisLabel: {\n          color: config.axisLabelColor,\n          fontSize: config.axisLabelFontSize,\n        },\n        pointer: {\n          length: `${config.pointerLength}%`,\n          itemStyle: {\n            color: config.progressItemStyleColor,\n          },\n        },\n        title: {\n          show: false,\n        },\n        detail: {\n          valueAnimation: true,\n          fontSize: props.config.detailFontSize,\n          offsetCenter: [0, '70%'],\n          color: props.config.detailColor,\n        },\n        data: [props.config.data],\n      },\n    ],\n  };\n  return option;\n};\nonMounted(() => {\n  refCharts.value = useEcharts(getOption(props.config), refCgauge as Ref<HTMLElement>).value;\n\n  watch(\n    () => props.config,\n    (newVal) => {\n      const option = refCharts.value?.getOption();\n      if (!option) {\n        return;\n      }\n\n      refCharts.value.setOption(getOption(newVal));\n    },\n  );\n});\n\nconst style = useStyle(props, refCharts);\n</script>\n<style lang=\"scss\" scoped>\n.t-inline-block {\n  display: inline-block;\n}\n</style>\n"],"names":["useApp","props","refCgauge","refCharts","getOption","config","useEcharts","newVal","_a","style","useStyle"],"mappings":"oOAmBAA,EAAAC,CAAA,EAEA,MAAAC,EAAkB,cAClBC,EAAkB,IAAgB,aAElCC,EAAAC,IACE,CAAsC,OAAA,CAC5B,CACN,KAAA,QACQ,OAAA,OACE,SAAA,CACE,KAAA,GACF,MAAAA,EAAA,uBACQ,UAAA,CACH,MAAAA,EAAA,sBACK,CAChB,EACF,SAAA,CACU,UAAA,CACG,MAAAA,EAAA,uBACK,MAAA,CAAA,CAAA,EAAAA,EAAA,sBAAA,CAAA,CAC4B,CAC5C,EACF,SAAA,CACU,KAAAA,EAAA,YACK,EACf,UAAA,CACW,OAAAA,EAAA,gBACM,UAAA,CACJ,MAAA,EACF,MAAAA,EAAA,uBACO,CAChB,EACF,UAAA,CACW,MAAAA,EAAA,eACK,SAAAA,EAAA,iBACG,EACnB,QAAA,CACS,OAAA,GAAAA,EAAA,iBACW,UAAA,CACP,MAAAA,EAAA,sBACK,CAChB,EACF,MAAA,CACO,KAAA,EACC,EACR,OAAA,CACQ,eAAA,GACU,SAAAJ,EAAA,OAAA,eACO,aAAA,CAAA,EAAA,KAAA,EACA,MAAAA,EAAA,OAAA,WACH,EACtB,KAAA,CAAAA,EAAA,OAAA,IAAA,CACwB,CAC1B,CACF,GAIJ,IAAA,UAAA,IAAA,CACEE,EAAA,MAAAG,EAAAF,EAAAH,EAAA,MAAA,EAAAC,CAAA,EAAA,MAEA,IAAA,MAAA,IAAAD,EAAA,OACcM,GAAA,OAGV,GADAC,EAAAL,EAAA,QAAA,MAAAK,EAAA,cAKAL,EAAA,MAAA,UAAAC,EAAAG,CAAA,CAAA,CAA2C,CAC7C,CACF,CAAA,EAGF,MAAAE,EAAAC,EAAAT,EAAAE,CAAA"}