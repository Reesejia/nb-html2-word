{"version":3,"file":"index.7d1317ed.js","sources":["../../../../../../packages/ui/src/svgIcon/src/index.vue"],"sourcesContent":["<template>\n  <div class=\"magic-ui-svgicon t-inline-block magic-ui-image-module\" :class=\"`${props.config?.id}`\">\n    <div v-if=\"showSvg\" :style=\"{ transform: `scale(${scaleX},${scaleY})` }\" class=\"svg-icon-box\">\n      <div v-html=\"svgHtml(props)\" style=\"display: inline-flex\" :style=\"{ fontSize: `${props.config.size}px` }\"></div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, onBeforeUnmount, onMounted, ref, watch } from 'vue';\n\nimport { MSvgIcon } from '../../types';\nimport useApp from '../../useApp';\nconst scaleX = ref(1);\nconst scaleY = ref(1);\nconst showSvg = ref(true);\nconst props = defineProps<{\n  config: MSvgIcon & {\n    id: string;\n    fill: string;\n    svgHtmlStr: string;\n    size: number;\n    src: string;\n  };\n  model?: Object;\n}>();\n\nwatch(\n  () => props.config.src,\n  (newVal) => {\n    console.log(newVal, 'props.config.src');\n  },\n  {\n    immediate: true,\n  },\n);\nuseApp(props);\nconst size = computed(() => props.config.size);\nonMounted(() => {\n  const elbox1 = document.querySelector(`.magic-ui-svgicon.${props.config?.id}`) || null;\n  const resizeObserver = new ResizeObserver((entries) => {\n    // eslint-disable-next-line array-callback-return\n    entries.forEach((entry) => {\n      if (entry?.target?.id === props.config?.id) {\n        const { width, height } = entry.contentRect;\n        scaleX.value = width / size.value;\n        scaleY.value = height / size.value;\n        props.config.style.width = width;\n        props.config.style.height = height;\n      }\n    });\n  });\n  if (elbox1) {\n    resizeObserver.observe(elbox1);\n  }\n  onBeforeUnmount(() => {\n    if (elbox1) {\n      resizeObserver.unobserve(elbox1);\n    }\n  });\n});\nconst svgHtml = (props: any) => {\n  const fillTest = /fill=(\"([^>+].*?)\"|'([^>+].*?)')/g;\n  const newHtmlStr = props.config.svgHtmlStr.replace(fillTest, `fill=\"${props.config?.fill}\"`);\n  return newHtmlStr;\n};\n</script>\n<style lang=\"scss\">\n.svgIcon-body {\n  box-sizing: border-box;\n}\n\n.magic-ui-svgicon {\n  position: relative;\n\n  .svg-icon-box {\n    width: 60px;\n    height: 60px;\n    position: absolute;\n    left: 0;\n    top: 0;\n    transform-origin: 0 0;\n    svg {\n      width: 60px;\n      height: 60px;\n    }\n  }\n}\n</style>\n"],"names":["scaleX","scaleY","showSvg","props","newVal","useApp","size","elbox1","_a","resizeObserver","entries","entry","_b","width","height","svgHtml","props2","fillTest"],"mappings":"oOAYAA,EAAe,WACfC,EAAe,WACfC,EAAgB,YAYhB,IAAA,MAAA,IAAAC,EAAA,OAAA,IACqBC,GAAA,CAEjB,QAAA,IAAAA,EAAA,kBAAA,CAAsC,EACxC,CACA,UAAA,EACa,CACb,EAEFC,EAAAF,CAAA,EACA,MAAAG,EAAa,IAAA,SAAA,IAAAH,EAAA,OAAA,IAAA,EACb,IAAA,UAAA,IAAA,OACE,MAAAI,EAAA,SAAA,cAAA,sBAAAC,EAAAL,EAAA,SAAA,YAAAK,EAAA,IAAA,GAAA,KACAC,EAAA,IAAA,eAAAC,GAAA,CAEEA,EAAA,QAAAC,GAAA,SACE,KAAAH,EAAAG,GAAA,YAAAA,EAAA,SAAA,YAAAH,EAAA,QAAAI,EAAAT,EAAA,SAAA,YAAAS,EAAA,IAAA,CACE,KAAA,CAAA,MAAAC,EAAA,OAAAC,GAAAH,EAAA,YACAX,EAAA,MAAAa,EAAAP,EAAA,MACAL,EAAA,MAAAa,EAAAR,EAAA,MACAH,EAAA,OAAA,MAAA,MAAAU,EACAV,EAAA,OAAA,MAAA,OAAAW,CAA4B,CAC9B,CAAA,CACD,CAAA,EAEHP,GACEE,EAAA,QAAAF,CAAA,EAEF,IAAA,gBAAA,IAAA,CACEA,GACEE,EAAA,UAAAF,CAAA,CACF,CAAA,CACD,CAAA,EAEH,MAAAQ,EAAAC,GAAA,OACE,MAAAC,EAAA,oCAEA,OADAD,EAAA,OAAA,WAAA,QAAAC,EAAA,UAAAT,EAAAQ,EAAA,SAAA,YAAAR,EAAA,OAAA,CACO"}